name: Build-Deploy
permissions:
  packages: write
  contents: write
on:
  push:
    branches:
      - "dev"
  # # Triggered on new GitHub Release
  # release:
  #   types: [published]
  # # Triggered on every successful Build action
  # workflow_run:
  #   workflows: ["Build"]
  #   branches: [dev]
  #   types:
  #     - completed
  # Manual trigger for rollback to specific release or redeploy latest
  workflow_dispatch:
    inputs:
      version:
        default: latest
        description: Tag you want to release.
        required: true

env:
  HUB_USER: alex129
  API_REPO: api
  IPAM_REPO: ipam
  TAG_SHORT: 

jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion != 'failure' }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Install golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
      - run: go version

      - name: Install Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          legacy: true    # will also install in PATH as `docker-compose`
      - run: docker-compose --version

      - name: Login to Docker hub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # - name: Get current branch
      #   id: check_step
      #   run: |
      #     raw=$(git branch -r --contains ${{ github.ref }})
      #     branch=${raw##*/}
      #     echo "{name}=branch" >> $GITHUB_OUTPUT
      #     echo "Branch is $branch."

      - name: Set tag env
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.API_REPO }}
          push: true
          tags: ${{ env.HUB_USER }}/${{ env.API_REPO }}:${{ steps.vars.outputs.sha_short }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.IPAM_REPO }}
          push: true
          tags: ${{ env.HUB_USER }}/${{ env.IPAM_REPO }}:${{ steps.vars.outputs.sha_short }}

  deploy_via_ssh:
    needs: build_and_push
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion != 'failure' }}
    steps:
      - name: Login to Docker hub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Deploy Docker image with your application using `docker compose up app` remotely
      - name: remote docker-compose up via ssh
        uses: appleboy/ssh-action@v0.1.5
        env:
          TAG_SHORT: ${{ steps.vars.outputs.sha_short }}
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          envs: TAG_SHORT
          script: |
            cd /opt/6in4/
            docker compose -f ./docker-compose.prod.yaml pull
            docker compose -f ./docker-compose.prod.yaml down
            docker compose -f ./docker-compose.prod.yaml up -d