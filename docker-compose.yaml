version: '3'

services:
  # web:
  #   build:
  #     context: web
  #   # image: alex129/web
  #   restart: always
  #   ports:
  #     - 80:80
  #   environment:
  #     - API=api:8080
  #     - PORT=80
  api:
    build:
      context: api
    # image: alex129/web
    restart: always
    ports:
        - "8080:8080"
    environment:
      - IPv4LOCALADDR=1.1.1.1
      - IPAM=ipam:1034
      - PORT=:8080
      - DB_URL=postgres://postgres:postgresql@localhost:5432/tunnelbroker?sslmode=disable
  ipam:
    build:
      context: ipam
    # image: alex129/ipam
    restart: always
    ports:
      - 1034:1034
    environment:
      - PORT=1034
      - DB_URL=postgres://postgres:postgresql@localhost:5432/tunnelbroker?sslmode=disable
  postgresdb:
    image: postgres
    tty: true
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgresql
      - POSTGRES_DB=tunnelbroker
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   ports:
  #     - 15672:15672
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rabbit
  #     - RABBITMQ_DEFAULT_PASS=rabbitwhole
  #     - RABBITMQ_DEFAULT_VHOST=my_vhost

# $ docker run -d --hostname my-rabbit --name some-rabbit -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password rabbitmq:3-management      


# docker run --name ipam-tb -p 1034:1034 -e "PORT=1034" -e "DB_URL=postgres://postgres:postgresql@10.90.3.12:5432/tunnelbroker?sslmode=disable" -d ipam:v1

# For running api -
#  export IPv4LOCALADDR=1.1.1.1
#  export IPAM=localhost:1034
#  export PORT=:8080
#  export DB_URL=postgres://postgres:postgresql@localhost:5432/tunnelbroker?sslmode=disable
# then 
# ╭─root@devvm ~/go/src/TunnelBroker/api ‹frontend+backend●› 
# ╰─# go run cmd/main.go      